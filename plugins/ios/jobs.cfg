[ios]
plugindir:
description.file: ${plugindir}/README.md

[ios.preforensics]
description: Run a selected set of jobs in this module: unback, characterize, databases, cookies, whatsapp
  The path is an absolute path to a directory containing an iTunes backup, or a ZIP file containing an iTunes backup.
  If the backup is encrypted, define unback_command in the `ios.unback` section.
help_section: ios
jobs:
  ios.unback
  ios.characterize
  ios.timeline
  ios.databases
  ios.cookies
  ios.whatsapp
  ios.whatsapp_split
  ios.adv_whatsapp

[ios.apollo]
description: Parse iOS databases from the APOLLO project (https://github.com/mac4n6/APOLLO). You must include also the relevant configuration file from RVT2HOME/conf/ios/apollo
help_section: ios
modules:
  base.directory.DirectoryFilter
  ApolloProject.FileParser
path: ${sourcedir}/mnt/p01

[ios.unback]
description: Unback an iOS backup directory or zip file
module: ios.unback.Unback
help_section: ios
inherits: ios.common
; unback_command: python2 ${rvthome}/external_tools/iphone-dataprotection/python_scripts/backup_tool.py {bk_path} {extract_path}
; extract_path: ${sourcedir}/mnt/p01
; unzip_path: ${sourcedir}/unzip
; remove_unzip_path: True
path: ${imagedir}/${source}.zip

[ios.characterize]
description: Characterizes an iPhone backup. This backup must be previously unbacked. See job plugins.ios.unback.Unback
module: ios.characterization.Characterization
help_section: ios
outfile: ${analysisdir}/characterize.csv
path: ${sourcedir}/mnt/p01

[ios.databases]
description: Parse iOS databases not in the APOLLO project
help_section: ios
modules:
  base.directory.DirectoryFilter
  FileParser.ios.databases
path: ${sourcedir}/mnt/p01

[ios.timeline]
description: Parse manifest file and generate a body and a timeline csv using mactime
help_section: ios
inherits: ios.common
modules:
  base.commands.Command cmd="mactime -b {outfile_body} -y -d -i hour {outfile_csv_hour}"
  base.output.CSVSink delimiter="|" write_header="False" outfile="{outfile_body}" quoting=0 file_exists=OVERWRITE
  ios.timeline.Timeline
default_params: {
    'outfile_body':'${timelinesdir}/${source}_BODY.csv',
    'outfile_csv_hour':'${timelinesdir}/${source}_hour_sum.csv',
    'outfile_csv':'${timelinesdir}/${source}_TL.csv'}
path: ${sourcedir}/mnt/p01

[ios.cookies]
description: Parse cookies in /HomeDomain/Library/Cookies
help_section: ios
modules:
  base.output.CSVSink outfile='{outfile}'
  ios.cookies.Cookies
outfile: ${ios.common:iosdir}/cookies.csv
default_params: {
  'outfile':'${outfile}'}
path: ${sourcedir}/mnt/p01

[ios.whatsapp_single]
description: Parse WhatsApp database filtered by message_group
help_section: ios
modules:
  base.output.CSVSink outfile='{outfile}'
  ios.whatsapp.WhatsApp media_outdir='${ios.common:iosdir}/whatsapp/{{message_group}}' message_group='{message_group}' start_date='{start_date}' end_date='{end_date}'
message_group:
path: ${sourcedir}/mnt/p01/
default_params: {
    'outfile':'${ios.common:iosdir}/whatsapp/whatsapp.csv',
    'message_group':'',
    'start_date': '',
    'end_date': ''}
params_help: {
    'path': 'The path to the directory to parse',
    'outfile': 'Save the result to this csv file. IMPORTANT: Be careful to redirect this path to the group folder when using message_group',
    'message_group': 'Select a specific conversation to parse',
    'start_date': 'If set, output only messages from this date. Example format: 2018-12-25',
    'end_date': 'If set, output only messages until this date. Example format: 2020-01-15'}

[ios.whatsapp]
description: Split WhastApp messages into several CSVs
help_section: ios
modules:
  base.mutations.ForEach run_job=ios.whatsapp_single
  base.mutations.SetFields fields='{{{{"outfile":"${ios.common:iosdir}/whatsapp/{{message_group}}/whatsapp.csv"}}}}'
  ios.whatsapp.WhatsAppChatSessions
path: ${sourcedir}/mnt/p01/
params_help: {
    'path': 'The path to the directory to parse'}

[ios.avere_whatsapp]
description: Avere WhastApp messages in IOS
help_section: ios
modules: ios.adv_whatsapp.AdvWhatsapps outfile='{outfile}' extract_path='{extract_path}'
outfile: ${ios.common:iosdir}/adv_whatsapp.txt
extract_path: ${sourcedir}/mnt/p01/
default_params: {
    'outfile':'${outfile}',
    'extract_path': '${extract_path}'}
params_help: {
    'extract_path': 'The path to the IOS root directory',
    'outfile': 'Save the result in this file'}

[ios.chat_to_html]
description: Convert a WhatsApp conversation to an html file.
help_section: ios
jobs:
    ios.chat_to_html_aux path='${ios.common:iosdir}/whatsapp/{message_group}/whatsapp.csv' message_group='{message_group}' template='{template}'
template: templates/chat2html.mako
default_params: {
    'message_group': 1,
    'template':'${template}'}
params_help: {
    'message_group': 'Group the conversation belongs to. It is a number',
    'template': 'Mako template file with html configuration. Relative to current working directory or RVTHOME'}

[ios.chat_to_html_aux]
modules:
    base.templates.TemplateSink outfile='${ios.common:iosdir}/whatsapp/{message_group}/conversation.html' template_file='{template}' file_exists=OVERWRITE
    base.input.CSVReader
